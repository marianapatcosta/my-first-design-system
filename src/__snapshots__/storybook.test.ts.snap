// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Accordion Default 1`] = `
<div
  className="sc-bdfBwQ enVKql"
  id=""
  onBlur={[Function]}
  style={
    Object {
      "width": "300px",
    }
  }
>
  <div
    aria-disabled={false}
    aria-expanded={false}
    className="sc-gsTCUz hFBqhS"
    disabled={false}
    onClick={[Function]}
    onKeyDown={[Function]}
    role="button"
    tabIndex={0}
  >
    Accordion title
    <img
      alt="chevron icon"
      className="sc-dlfnbm lhIKrG"
      src="chevron.svg"
    />
  </div>
  <div
    className="sc-hKgILt dxNlHL"
  >
    <div>
      Accordion content 
      <img
        alt="test"
        src="test.jpg"
        style={
          Object {
            "width": "200px",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Button Full Length 1`] = `
<button
  className="sc-eCssSg kjcuDW"
  disabled={false}
  id=""
  onClick={[Function]}
  style={Object {}}
>
  Button
</button>
`;

exports[`Storyshots Button Primary 1`] = `
<button
  className="sc-eCssSg tSYqM"
  disabled={false}
  id=""
  onClick={[Function]}
  style={Object {}}
>
  Button
</button>
`;

exports[`Storyshots Button Secondary 1`] = `
<button
  className="sc-eCssSg giGWyh"
  disabled={false}
  id=""
  onClick={[Function]}
  style={Object {}}
>
  Button
</button>
`;

exports[`Storyshots Button Small 1`] = `
<button
  className="sc-eCssSg giGWyh"
  disabled={false}
  id=""
  onClick={[Function]}
  style={Object {}}
>
  Button
</button>
`;

exports[`Storyshots Card Default Card 1`] = `
<div
  className="sc-jSgupP gHiVhP"
  id=""
  style={Object {}}
>
  <div>
    This is Card component
  </div>
</div>
`;

exports[`Storyshots Checkbox Default 1`] = `
<label
  className="sc-gKsewC estDAR"
  disabled={false}
  id=""
  style={Object {}}
>
  <input
    checked={false}
    className="sc-pFZIQ ikZDik"
    disabled={false}
    name="Checkbox"
    onChange={[Function]}
    type="checkbox"
  />
  <div
    className="sc-fubCfw euywra"
    disabled={false}
  />
  Checkbox
</label>
`;

exports[`Storyshots Dropdown Default 1`] = `
<div
  className="sc-jrAGrp ccnkRA"
>
  <div
    className="sc-kEjbxe ckRChg"
    disabled={false}
  >
    <select
      aria-label="Select "
      className="sc-crrsfI hgTQgD"
      disabled={false}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      value=""
    >
      <option
        className="sc-dQppl bsMIta"
        hidden={true}
        value=""
      >
        select an option
      </option>
      <option
        className="sc-dQppl bsMIta"
        value="option 1"
      >
        option 1
      </option>
      <option
        className="sc-dQppl bsMIta"
        value="option 2"
      >
        option 2
      </option>
      <option
        className="sc-dQppl bsMIta"
        value="option 3"
      >
        option 3
      </option>
    </select>
  </div>
</div>
`;

exports[`Storyshots Dropdown With Label 1`] = `
<div
  className="sc-jrAGrp ccnkRA"
>
  <label
    className="sc-iqHYGH wYduP"
    disabled={false}
    htmlFor="Example"
  >
    Example
  </label>
  <div
    className="sc-kEjbxe ckRChg"
    disabled={false}
  >
    <select
      aria-label="Select Example"
      className="sc-crrsfI hgTQgD"
      disabled={false}
      name="Example"
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      value=""
    >
      <option
        className="sc-dQppl bsMIta"
        hidden={true}
        value=""
      >
        select an option
      </option>
      <option
        className="sc-dQppl bsMIta"
        value="option 1"
      >
        option 1
      </option>
      <option
        className="sc-dQppl bsMIta"
        value="option 2"
      >
        option 2
      </option>
      <option
        className="sc-dQppl bsMIta"
        value="option 3"
      >
        option 3
      </option>
    </select>
  </div>
</div>
`;

exports[`Storyshots Emoji Default 1`] = `
<div
  aria-hidden="false"
  aria-label="smiley"
  className="sc-bqyKva eWviMC"
  role="img"
>
  ðŸ˜ƒ
</div>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="sc-eCssSg giGWyh"
        disabled={false}
        id=""
        onClick={[Function]}
        style={Object {}}
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="sc-eCssSg giGWyh"
        disabled={false}
        id=""
        onClick={[Function]}
        style={Object {}}
      >
        Log in
      </button>
      <button
        className="sc-eCssSg tSYqM"
        disabled={false}
        id=""
        onClick={[Function]}
        style={Object {}}
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="sc-eCssSg giGWyh"
          disabled={false}
          id=""
          onClick={[Function]}
          style={Object {}}
        >
          Log out
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="sc-eCssSg giGWyh"
          disabled={false}
          id=""
          onClick={[Function]}
          style={Object {}}
        >
          Log in
        </button>
        <button
          className="sc-eCssSg tSYqM"
          disabled={false}
          id=""
          onClick={[Function]}
          style={Object {}}
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Image Clickable 1`] = `
<div
  className="sc-kstrdz hFNOsv"
>
  <div
    className="sc-fodVxV evgPqt"
    data-testid="image-placeholder"
  />
  <img
    alt=""
    className="sc-hBEYos gxAJla"
    data-testid="image"
    id=""
    loading="lazy"
    onClick={[Function]}
    onKeyDown={[Function]}
    onLoad={[Function]}
    role="button"
    src="test.jpg"
    style={
      Object {
        "width": "300px",
      }
    }
    tabIndex={0}
  />
</div>
`;

exports[`Storyshots Image Default 1`] = `
<div
  className="sc-kstrdz hFNOsv"
>
  <div
    className="sc-fodVxV evgPqt"
    data-testid="image-placeholder"
  />
  <img
    alt=""
    className="sc-hBEYos bVdjAe"
    data-testid="image"
    id=""
    loading="lazy"
    onClick={[Function]}
    onKeyDown={[Function]}
    onLoad={[Function]}
    role="img"
    src="test.jpg"
    style={
      Object {
        "width": "300px",
      }
    }
    tabIndex={-1}
  />
</div>
`;

exports[`Storyshots Image Zoomable 1`] = `
<div
  style={
    Object {
      "height": "200px",
      "width": "300px",
    }
  }
>
  <div
    className="sc-kstrdz hFNOsv"
  >
    <div
      className="sc-fodVxV evgPqt"
      data-testid="image-placeholder"
    />
    <img
      alt=""
      className="sc-hBEYos iqePNo"
      data-testid="image"
      id=""
      loading="lazy"
      onClick={[Function]}
      onKeyDown={[Function]}
      onLoad={[Function]}
      role="img"
      src="test.jpg"
      style={
        Object {
          "width": "300px",
        }
      }
      tabIndex={-1}
    />
  </div>
</div>
`;

exports[`Storyshots Input Default 1`] = `
<div
  className="sc-fFubgz dXlnAR"
>
  
  <div
    className="sc-bkzZxe fbHCTq"
    disabled={false}
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="sc-idOhPF kiyWqe"
      data-testid="input-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      placeholder=""
      style={Object {}}
      type="text"
      value="hello"
    />
    
  </div>
</div>
`;

exports[`Storyshots Input With Error 1`] = `
<div
  className="sc-fFubgz dXlnAR"
>
  
  <div
    className="sc-bkzZxe fbHCTq"
    disabled={false}
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="sc-idOhPF fMbSFs"
      data-testid="input-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      placeholder=""
      style={Object {}}
      type="text"
      value="hello"
    />
    
  </div>
  <p
    className="sc-dmlrTW gqjlru"
  >
    This is an error!
  </p>
</div>
`;

exports[`Storyshots Input With Icon 1`] = `
<div
  className="sc-fFubgz dXlnAR"
>
  
  <div
    className="sc-bkzZxe fbHCTq"
    disabled={false}
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="sc-idOhPF kiyWqe"
      data-testid="input-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      placeholder=""
      style={Object {}}
      type="text"
      value="hello"
    />
    <img
      alt=""
      className="sc-hHftDr fZVjb"
      data-testid="input-icon"
      role=""
      src="tick.svg"
      tabIndex={-1}
    />
  </div>
</div>
`;

exports[`Storyshots Input With Label 1`] = `
<div
  className="sc-fFubgz dXlnAR"
>
  <label
    className="sc-dIUggk jrhDJm"
    disabled={false}
    htmlFor=""
  >
    Input
  </label>
  <div
    className="sc-bkzZxe fbHCTq"
    disabled={false}
  >
    <input
      autoComplete="off"
      autoFocus={false}
      className="sc-idOhPF kiyWqe"
      data-testid="input-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      placeholder=""
      style={Object {}}
      type="text"
      value="hello"
    />
    
  </div>
</div>
`;

exports[`Storyshots Modal Default 1`] = `
<div
  className="sc-kfzAmx fmJzuD"
  id=""
  style={Object {}}
/>
`;

exports[`Storyshots Search Default 1`] = `
<div
  className="sc-fKFyDc gUJrTO"
>
  
  <div
    className="sc-iwyYcG ktiuNA"
  >
    <input
      className="sc-cxFLnm hZCejo"
      data-testid="search-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder=""
      style={Object {}}
      type="search"
      value=""
    />
    <div
      className="sc-lmoMRL fPICtK"
    >
      <img
        alt="magnifying-glass-icon"
        className="sc-iJuUWI SCJUF"
        data-testid="search-icon"
        onClick={[Function]}
        src="magnifying-glass.svg"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Search Expansible 1`] = `
<div
  className="sc-fKFyDc gUJrTO"
>
  
  <div
    className="sc-iwyYcG kUHmRY"
  >
    <input
      className="sc-cxFLnm bQnvvr"
      data-testid="search-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder=""
      style={Object {}}
      type="search"
      value=""
    />
    <div
      className="sc-lmoMRL fPICtK"
    >
      <img
        alt="magnifying-glass-icon"
        className="sc-iJuUWI BlMPp"
        data-testid="search-icon"
        onClick={[Function]}
        src="magnifying-glass.svg"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Search With Label 1`] = `
<div
  className="sc-fKFyDc gUJrTO"
>
  <label
    className="sc-bBXqnf diGcNE"
    disabled={false}
    htmlFor=""
  >
    Search
  </label>
  <div
    className="sc-iwyYcG ktiuNA"
  >
    <input
      className="sc-cxFLnm hZCejo"
      data-testid="search-field"
      disabled={false}
      id=""
      maxLength={150}
      name=""
      onBlur={[Function]}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder=""
      style={Object {}}
      type="search"
      value=""
    />
    <div
      className="sc-lmoMRL fPICtK"
    >
      <img
        alt="magnifying-glass-icon"
        className="sc-iJuUWI SCJUF"
        data-testid="search-icon"
        onClick={[Function]}
        src="magnifying-glass.svg"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots ShowMore Default 1`] = `
<div
  className="sc-giIncl iNVRnK"
  id=""
  style={Object {}}
/>
`;

exports[`Storyshots Tab Active 1`] = `
<li
  aria-selected={true}
  className="sc-ezrdKe dlxQau"
  disabled={false}
  id=""
  onClick={[Function]}
  onKeyDown={[Function]}
  role="tab"
  style={Object {}}
  tabIndex={0}
>
  Tab 1
</li>
`;

exports[`Storyshots Tab Default 1`] = `
<li
  aria-selected={false}
  className="sc-ezrdKe gzkZmf"
  disabled={false}
  id=""
  onClick={[Function]}
  onKeyDown={[Function]}
  role="tab"
  style={Object {}}
  tabIndex={0}
>
  Tab 1
</li>
`;

exports[`Storyshots Tabs Default 1`] = `
<div
  className="sc-bYEvPH fQmerA"
  id=""
  style={Object {}}
>
  <div
    className="sc-kLgntA iQIBgy"
  >
    <ul
      aria-label="Select "
      className="sc-iktFzd dxYNHZ"
      role="tablist"
    >
      <li
        aria-selected={true}
        className="sc-ezrdKe dlxQau"
        disabled={false}
        id=""
        onClick={[Function]}
        onKeyDown={[Function]}
        role="tab"
        style={Object {}}
        tabIndex={0}
      >
        Tab 1
      </li>
      <li
        aria-selected={false}
        className="sc-ezrdKe gzkZmf"
        disabled={false}
        id=""
        onClick={[Function]}
        onKeyDown={[Function]}
        role="tab"
        style={Object {}}
        tabIndex={0}
      >
        Tab 2
      </li>
    </ul>
  </div>
  <div
    aria-labelledby="Tab 1"
    className="sc-jJEJSO"
    role="tabpanel"
  >
    <div
      className="sc-hiSbYr ftGRQD"
    />
    <div>
      Tab 1 content
    </div>
  </div>
</div>
`;

exports[`Storyshots Textarea Default 1`] = `
<div
  className="sc-gWHgXt jfhPce"
>
  <textarea
    className="sc-cBNfnY juJrhQ"
    data-testid="textarea-field"
    disabled={false}
    id=""
    name=""
    onBlur={[Function]}
    onChange={[Function]}
    placeholder=""
    rows={5}
    style={Object {}}
    value="hello"
  />
</div>
`;

exports[`Storyshots Textarea With Error 1`] = `
<div
  className="sc-gWHgXt jfhPce"
>
  <textarea
    className="sc-cBNfnY ka-DjTO"
    data-testid="textarea-field"
    disabled={false}
    id=""
    name=""
    onBlur={[Function]}
    onChange={[Function]}
    placeholder=""
    rows={5}
    style={Object {}}
    value="hello"
  />
  <p
    className="sc-jcVebW jihOAS"
  >
    This is an error!
  </p>
</div>
`;

exports[`Storyshots Textarea With Label 1`] = `
<div
  className="sc-gWHgXt jfhPce"
>
  <label
    className="sc-citwmv iTCEpu"
    disabled={false}
    htmlFor=""
  >
    Textarea
  </label>
  <textarea
    className="sc-cBNfnY juJrhQ"
    data-testid="textarea-field"
    disabled={false}
    id=""
    name=""
    onBlur={[Function]}
    onChange={[Function]}
    placeholder=""
    rows={5}
    style={Object {}}
    value="hello"
  />
</div>
`;

exports[`Storyshots Toast Alert 1`] = `
<div
  className="sc-bZSQDF ghLeVC"
  id=""
  style={Object {}}
  type="alert"
>
  <img
    alt="alert.svg icon"
    className="sc-iUuytg ecTAIg"
    src="alert.svg"
  />
  <div
    className="sc-iBaPrD kOEA-DW"
    type="alert"
  >
    alert toast
  </div>
</div>
`;

exports[`Storyshots Toast Info 1`] = `
<div
  className="sc-bZSQDF fwlSUD"
  id=""
  style={Object {}}
  type="info"
>
  <img
    alt="info.svg icon"
    className="sc-iUuytg ecTAIg"
    src="info.svg"
  />
  <div
    className="sc-iBaPrD kOEA-DW"
    type="info"
  >
    info toast
  </div>
</div>
`;

exports[`Storyshots Toast Success 1`] = `
<div
  className="sc-bZSQDF zTKKH"
  id=""
  style={Object {}}
  type="success"
>
  <img
    alt="success.svg icon"
    className="sc-iUuytg ecTAIg"
    src="success.svg"
  />
  <div
    className="sc-iBaPrD kOEA-DW"
    type="success"
  >
    success toast
  </div>
</div>
`;

exports[`Storyshots Toast Warning 1`] = `
<div
  className="sc-bZSQDF eWLxil"
  id=""
  style={Object {}}
  type="warning"
>
  <img
    alt="warning.svg icon"
    className="sc-iUuytg ecTAIg"
    src="warning.svg"
  />
  <div
    className="sc-iBaPrD kOEA-DW"
    type="warning"
  >
    warning toast
  </div>
</div>
`;

exports[`Storyshots ToggleSwitch Default 1`] = `
<label
  className="sc-eggNIi bByaAq"
  disabled={false}
  style={Object {}}
>
  <input
    checked={false}
    className="sc-dOSReg bHWnAQ"
    disabled={false}
    name=""
    onChange={[Function]}
    type="checkbox"
  />
  <span
    checked={false}
    className="sc-jNMdTA dsmTrH"
    data-testid="toggle-slider"
    disabled={false}
    label=""
  >
    <span
      className="sc-cTkwdZ fLTiHu"
      disabled={false}
    />
    <span
      className="sc-cTkwdZ fLTiHu"
    >
      on
    </span>
  </span>
</label>
`;

exports[`Storyshots ToggleSwitch With Label 1`] = `
<label
  className="sc-eggNIi bByaAq"
  disabled={false}
  style={Object {}}
>
  <input
    checked={false}
    className="sc-dOSReg bHWnAQ"
    disabled={false}
    name="ToggleSwitch"
    onChange={[Function]}
    type="checkbox"
  />
  ToggleSwitch
  <span
    checked={false}
    className="sc-jNMdTA erzGCT"
    data-testid="toggle-slider"
    disabled={false}
    label="ToggleSwitch"
  >
    <span
      className="sc-cTkwdZ fLTiHu"
      disabled={false}
    />
    <span
      className="sc-cTkwdZ fLTiHu"
    >
      on
    </span>
  </span>
</label>
`;

exports[`Storyshots Tooltip Default 1`] = `
<div
  className="sc-bBrOnJ bzdtwM"
  id=""
  style={
    Object {
      "marginLeft": "100px",
    }
  }
>
  Tooltip
</div>
`;
